<?xml version="1.0" encoding="UTF-8" ?>  
    
<schema name="example" version="1.4">  
      
  <types>  
       
    <!-- The StrField type is not analyzed, but indexed/stored verbatim. -->  
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>  
    
    <!-- boolean type: "true" or "false" -->  
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>  
    <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->  
    <fieldtype name="binary" class="solr.BinaryField"/>  
    
    <!-- 
      Default numeric field types. For faster range queries, consider the tint/tfloat/tlong/tdouble types. 
    -->  
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>  
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>  
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>  
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>  
    
       
    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>  
    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>  
    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>  
    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>  
    
       
    <fieldType name="date" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/>  
    
    <!-- A Trie based date field for faster date range queries and date faceting. -->  
    <fieldType name="tdate" class="solr.TrieDateField" omitNorms="true" precisionStep="6" positionIncrementGap="0"/>  
    
    
    <fieldType name="pint" class="solr.IntField" omitNorms="true"/>  
    <fieldType name="plong" class="solr.LongField" omitNorms="true"/>  
    <fieldType name="pfloat" class="solr.FloatField" omitNorms="true"/>  
    <fieldType name="pdouble" class="solr.DoubleField" omitNorms="true"/>  
    <fieldType name="pdate" class="solr.DateField" sortMissingLast="true" omitNorms="true"/>  
    
    
    <fieldType name="sint" class="solr.SortableIntField" sortMissingLast="true" omitNorms="true"/>  
    <fieldType name="slong" class="solr.SortableLongField" sortMissingLast="true" omitNorms="true"/>  
    <fieldType name="sfloat" class="solr.SortableFloatField" sortMissingLast="true" omitNorms="true"/>  
    <fieldType name="sdouble" class="solr.SortableDoubleField" sortMissingLast="true" omitNorms="true"/>  
    
    <fieldType name="random" class="solr.RandomSortField" indexed="true" />  
    
    <!-- A text field that only splits on whitespace for exact matching of words -->  
    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">  
      <analyzer>  
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>  
      </analyzer>  
    </fieldType>  
    
    <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">  
      <analyzer type="index">  
        <tokenizer class="solr.StandardTokenizerFactory"/>  
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />  
        <!-- in this example, we will only use synonyms at query time  
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>  
        -->  
        <filter class="solr.LowerCaseFilterFactory"/>  
      </analyzer>  
      <analyzer type="query">  
        <tokenizer class="solr.StandardTokenizerFactory"/>  
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />  
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>  
        <filter class="solr.LowerCaseFilterFactory"/>  
      </analyzer>  
    </fieldType>  
    
    <fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">  
      <analyzer type="index">  
        <tokenizer class="solr.StandardTokenizerFactory"/>  
           
        <filter class="solr.StopFilterFactory"  
                ignoreCase="true"  
                words="stopwords_en.txt"  
                enablePositionIncrements="true"  
                />  
        <filter class="solr.LowerCaseFilterFactory"/>  
    <filter class="solr.EnglishPossessiveFilterFactory"/>  
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>  
    <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:  
        <filter class="solr.EnglishMinimalStemFilterFactory"/>  
    -->  
        <filter class="solr.PorterStemFilterFactory"/>  
      </analyzer>  
      <analyzer type="query">  
        <tokenizer class="solr.StandardTokenizerFactory"/>  
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>  
        <filter class="solr.StopFilterFactory"  
                ignoreCase="true"  
                words="stopwords_en.txt"  
                enablePositionIncrements="true"  
                />  
        <filter class="solr.LowerCaseFilterFactory"/>  
    <filter class="solr.EnglishPossessiveFilterFactory"/>  
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>  
    <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:  
        <filter class="solr.EnglishMinimalStemFilterFactory"/>  
    -->  
        <filter class="solr.PorterStemFilterFactory"/>  
      </analyzer>  
    </fieldType>  
    
    <fieldType name="text_en_splitting" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">  
      <analyzer type="index">  
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>  
           
        <filter class="solr.StopFilterFactory"  
                ignoreCase="true"  
                words="stopwords_en.txt"  
                enablePositionIncrements="true"  
                />  
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>  
        <filter class="solr.LowerCaseFilterFactory"/>  
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>  
        <filter class="solr.PorterStemFilterFactory"/>  
      </analyzer>  
      <analyzer type="query">  
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>  
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>  
        <filter class="solr.StopFilterFactory"  
                ignoreCase="true"  
                words="stopwords_en.txt"  
                enablePositionIncrements="true"  
                />  
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>  
        <filter class="solr.LowerCaseFilterFactory"/>  
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>  
        <filter class="solr.PorterStemFilterFactory"/>  
      </analyzer>  
    </fieldType>  
    
    <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,  
         but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->  
    <fieldType name="text_en_splitting_tight" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">  
      <analyzer>  
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>  
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>  
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords_en.txt"/>  
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="1" catenateNumbers="1" catenateAll="0"/>  
        <filter class="solr.LowerCaseFilterFactory"/>  
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>  
        <filter class="solr.EnglishMinimalStemFilterFactory"/>  
        <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes  
             possible with WordDelimiterFilter in conjuncton with stemming. -->  
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>  
      </analyzer>  
    </fieldType>  
    
    <!-- Just like text_general except it reverses the characters of  
     each token, to enable more efficient leading wildcard queries. -->  
    <fieldType name="text_general_rev" class="solr.TextField" positionIncrementGap="100">  
      <analyzer type="index">  
        <tokenizer class="solr.StandardTokenizerFactory"/>  
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />  
        <filter class="solr.LowerCaseFilterFactory"/>  
        <filter class="solr.ReversedWildcardFilterFactory" withOriginal="true"  
           maxPosAsterisk="3" maxPosQuestion="2" maxFractionAsterisk="0.33"/>  
      </analyzer>  
      <analyzer type="query">  
        <tokenizer class="solr.StandardTokenizerFactory"/>  
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>  
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />  
        <filter class="solr.LowerCaseFilterFactory"/>  
      </analyzer>  
    </fieldType>  
    
       
    <fieldType name="alphaOnlySort" class="solr.TextField" sortMissingLast="true" omitNorms="true">  
      <analyzer>  
        <!-- KeywordTokenizer does no actual tokenizing, so the entire  
             input string is preserved as a single token  
          -->  
        <tokenizer class="solr.KeywordTokenizerFactory"/>  
        <!-- The LowerCase TokenFilter does what you expect, which can be  
             when you want your sorting to be case insensitive  
          -->  
        <filter class="solr.LowerCaseFilterFactory" />  
        <!-- The TrimFilter removes any leading or trailing whitespace -->  
        <filter class="solr.TrimFilterFactory" />  
           
        <filter class="solr.PatternReplaceFilterFactory"  
                pattern="([^a-z])" replacement="" replace="all"  
        />  
      </analyzer>  
    </fieldType>  
        
    <fieldtype name="phonetic" stored="false" indexed="true" class="solr.TextField" >  
      <analyzer>  
        <tokenizer class="solr.StandardTokenizerFactory"/>  
        <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>  
      </analyzer>  
    </fieldtype>  
    
    <fieldtype name="payloads" stored="false" indexed="true" class="solr.TextField" >  
      <analyzer>  
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>  
           
        <filter class="solr.DelimitedPayloadTokenFilterFactory" encoder="float"/>  
      </analyzer>  
    </fieldtype>  
    
    <!-- lowercases the entire field value, keeping it as a single token.  -->  
    <fieldType name="lowercase" class="solr.TextField" positionIncrementGap="100">  
      <analyzer>  
        <tokenizer class="solr.KeywordTokenizerFactory"/>  
        <filter class="solr.LowerCaseFilterFactory" />  
      </analyzer>  
    </fieldType>  
    
    <fieldType name="text_path" class="solr.TextField" positionIncrementGap="100">  
      <analyzer>  
        <tokenizer class="solr.PathHierarchyTokenizerFactory"/>  
      </analyzer>  
    </fieldType>  
        
    <fieldType name="textik" class="solr.TextField" >  
       <analyzer class="org.wltea.analyzer.lucene.IKAnalyzer"/>    
    
       <analyzer type="index">    
           <tokenizer class="org.wltea.analyzer.solr.IKTokenizerFactory" isMaxWordLength="false"/>    
           <filter class="solr.StopFilterFactory"    
                   ignoreCase="true" words="stopwords.txt"/>    
           <filter class="solr.WordDelimiterFilterFactory"    
                   generateWordParts="1"    
                   generateNumberParts="1"    
                   catenateWords="1"    
                   catenateNumbers="1"    
                   catenateAll="0"    
                   splitOnCaseChange="1"/>    
           <filter class="solr.LowerCaseFilterFactory"/>    
           <filter class="solr.EnglishPorterFilterFactory"    
               protected="protwords.txt"/>    
           <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>    
       </analyzer>    
        <analyzer type="query">    
           <tokenizer class="org.wltea.analyzer.solr.IKTokenizerFactory" isMaxWordLength="false"/>    
           <filter class="solr.StopFilterFactory"    
                   ignoreCase="true" words="stopwords.txt"/>    
           <filter class="solr.WordDelimiterFilterFactory"    
                   generateWordParts="1"    
                   generateNumberParts="1"    
                   catenateWords="1"    
                   catenateNumbers="1"    
                   catenateAll="0"    
                   splitOnCaseChange="1"/>    
           <filter class="solr.LowerCaseFilterFactory"/>    
           <filter class="solr.EnglishPorterFilterFactory"    
               protected="protwords.txt"/>    
           <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>    
       </analyzer>           
    </fieldType>  
        
    <!-- since fields of this type are by default not stored or indexed,  
         any data added to them will be ignored outright.  -->   
    <fieldtype name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" />  
    
    <fieldType name="point" class="solr.PointType" dimension="2" subFieldSuffix="_d"/>  
    
    <!-- A specialized field for geospatial search. If indexed, this fieldType must not be multivalued. -->  
    <fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate"/>  
    
   <!--  
    A Geohash is a compact representation of a latitude longitude pair in a single field.  
    See http://wiki.apache.org/solr/SpatialSearch  
   -->  
    <fieldtype name="geohash" class="solr.GeoHashField"/>  
 </types>  
    
    
 <fields>  
    
    <field name="id" type="string" indexed="true" stored="true" multiValued="false" required="true"/>  
     <field name="code" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="chName" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="enName" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="nickName" type="string" indexed="true" stored="true" multiValued="false" />  
     <field name="birthdate" type="date" indexed="true" stored="true" multiValued="false" />   
     <field name="height" type="tfloat" indexed="true" stored="true" multiValued="false" />   
     <field name="email" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="mobile" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="workPhone" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="homePhone" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="address" type="string" indexed="true" stored="true" multiValued="false" />  
    <field name="postal" type="string" indexed="true" stored="true" multiValued="false"/>  
     <field name="idNumber" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="workProvchName" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="workProvenName" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="workCitychName" type="string" indexed="true" stored="true" multiValued="false" />  
     <field name="workCityenName" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="houseProvchName" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="houseProvenName" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="houseCitychName" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="houseCityenName" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="origProvchName" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="origProvenName" type="string" indexed="true" stored="true" multiValued="false" />   
    <field name="origCitychName" type="string" indexed="true" stored="true" multiValued="false"/>  
     <field name="origCityenName" type="string" indexed="true" stored="true" multiValued="false" />  
    <field name="experience" type="string" indexed="true" stored="true" multiValued="false" />       
     <field name="compIdchFname" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="compIdenFname" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="industrychName" type="string" indexed="true" stored="true" multiValued="false" />  
     <field name="industryenName" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="postchName" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="postenName" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="subPostchName" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="subPostenName" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="postRemark" type="string" indexed="true" stored="true" multiValued="false" />  
    <field name="departRemark" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="salaryMonth" type="string" indexed="true" stored="true" multiValued="false" />   
    <field name="salaryOfYear" type="string" indexed="true" stored="true" multiValued="false"/>  
     <field name="salaryOfMonth" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="bonus" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="allowance" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="stock" type="string" indexed="true" stored="true" multiValued="false" />  
     <field name="salaryRemark" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="expectLocation" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="expectIndustry" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="expectPost" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="selfAssessment" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="completion" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="addressEn" type="string" indexed="true" stored="true" multiValued="false" />   
    <field name="departRemarkEn" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="postRemarkEn" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="salaryRemarkEn" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="language" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="selfAssessmentEn" type="string" indexed="true" stored="true" multiValued="false" />   
     <field name="overseaLocation" type="string" indexed="true" stored="true" multiValued="false" />     
    
    <field name="persondetail" type="textik" indexed="true" stored="false" multiValued="true" />  
    <copyField source="code" dest="persondetail" />  
    <copyField source="chName" dest="persondetail" />  
    <copyField source="enName" dest="persondetail" />  
    <copyField source="nickName" dest="persondetail" />  
    <copyField source="birthdate" dest="persondetail" />  
    <copyField source="height" dest="persondetail" />  
    <copyField source="email" dest="persondetail" />  
    <copyField source="mobile" dest="persondetail" />  
    <copyField source="workPhone" dest="persondetail" />  
    <copyField source="homePhone" dest="persondetail" />  
    <copyField source="address" dest="persondetail" />  
    <copyField source="postal" dest="persondetail" />  
    <copyField source="idNumber" dest="persondetail" />  
    <copyField source="workProvchName" dest="persondetail" />  
    <copyField source="workProvenName" dest="persondetail" />  
    <copyField source="workCitychName" dest="persondetail" />  
    <copyField source="workCityenName" dest="persondetail" />  
    <copyField source="houseProvchName" dest="persondetail" />  
    <copyField source="houseProvenName" dest="persondetail" />  
    <copyField source="houseCitychName" dest="persondetail" />  
    <copyField source="houseCityenName" dest="persondetail" />  
    <copyField source="origProvchName" dest="persondetail" />  
    <copyField source="origProvenName" dest="persondetail" />  
    <copyField source="origCitychName" dest="persondetail" />  
    <copyField source="origCityenName" dest="persondetail" />  
    <copyField source="experience" dest="persondetail" />  
    <copyField source="compIdchFname" dest="persondetail" />  
    <copyField source="compIdenFname" dest="persondetail" />  
    <copyField source="industrychName" dest="persondetail" />  
    <copyField source="industryenName" dest="persondetail" />  
    <copyField source="postchName" dest="persondetail" />  
    <copyField source="postenName" dest="persondetail" />  
    <copyField source="subPostchName" dest="persondetail" />  
    <copyField source="subPostenName" dest="persondetail" />  
    <copyField source="postRemark" dest="persondetail" />  
    <copyField source="departRemark" dest="persondetail" />  
    <copyField source="salaryMonth" dest="persondetail" />  
    <copyField source="salaryOfYear" dest="persondetail" />  
    <copyField source="salaryOfMonth" dest="persondetail" />  
    <copyField source="bonus" dest="persondetail" />  
    <copyField source="allowance" dest="persondetail" />  
    <copyField source="stock" dest="persondetail" />  
    <copyField source="salaryRemark" dest="persondetail" />  
    <copyField source="expectLocation" dest="persondetail" />  
    <copyField source="expectIndustry" dest="persondetail" />  
    <copyField source="expectPost" dest="persondetail" />  
    <copyField source="selfAssessment" dest="persondetail" />  
    <copyField source="completion" dest="persondetail" />  
    <copyField source="addressEn" dest="persondetail" />  
    <copyField source="departRemarkEn" dest="persondetail" />  
    <copyField source="postRemarkEn" dest="persondetail" />  
    <copyField source="salaryRemarkEn" dest="persondetail" />  
    <copyField source="language" dest="persondetail" />  
    <copyField source="selfAssessmentEn" dest="persondetail" />  
    <copyField source="overseaLocation" dest="persondetail" />  
        
 </fields>  
     
 <uniqueKey>id</uniqueKey>  
    
 <!-- field for the QueryParser to use when an explicit fieldname is absent -->  
 <defaultSearchField>persondetail</defaultSearchField>  
    
 <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->  
 <solrQueryParser defaultOperator="OR"/>  
</schema>  