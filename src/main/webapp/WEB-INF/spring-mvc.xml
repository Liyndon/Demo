<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 扫描controller（controller层注入） -->
    <context:component-scan base-package="com.demo.controller"/>
    
    <!-- 必须加上这一条，让cglib代理controller类，否则aop增强不会在controller中切入 -->
    <aop:aspectj-autoproxy  proxy-target-class="true"/>
    
    <!-- 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的 -->
    <!-- 指定自己定义的validator -->
    <mvc:annotation-driven validator="validator"/>
	
	 <!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    
      <!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找 -->
                <value>classpath:messages</value>
                <value>classpath:org/hibernate/validator/ValidationMessages</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="false"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>

    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
    </mvc:interceptors>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="zh_CN"/>
    </bean>

    <!-- 支持返回json(避免IE在ajax请求时，返回json出现下载 ) -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <mvc:annotation-driven>   
    <mvc:message-converters>     
        <bean class="org.springframework.http.converter.StringHttpMessageConverter">     
            <property name="supportedMediaTypes">     
                <list>     
                    <value>text/plain;charset=utf-8</value>
					<value>text/html;charset=utf-8</value> 
                </list>     
            </property>
        </bean>      
    </mvc:message-converters>     
	</mvc:annotation-driven>   
    
    <!-- 支持返回json -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=utf-8</value>
				<value>text/html;charset=utf-8</value>
				<value>text/json;charset=utf-8</value>
				<value>application/json;charset=utf-8</value>
            </list>
        </property>
        <property name="objectMapper">
           	<bean class="org.codehaus.jackson.map.ObjectMapper">
               <property name="dateFormat">
                   <bean class="java.text.SimpleDateFormat">
                       <constructor-arg index="0" type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
                   </bean>
               </property>
            </bean>
        </property>    
    </bean>
    
	
    <!-- 对模型视图添加前后缀 -->
    <bean id="internalResourceViewResolver" 
    	class="org.springframework.web.servlet.view.InternalResourceViewResolver"
    	p:viewClass="org.springframework.web.servlet.view.JstlView"
        p:prefix="/WEB-INF/jsp/"
        p:order = "1" 
        p:suffix=".jsp"/>
        
	<context:annotation-config />
	<mvc:default-servlet-handler/>
	<mvc:annotation-driven conversion-service="conversionService" />
	<mvc:view-controller path="/" view-name="redirect:/home" />
	<mvc:resources mapping="/html/**" location="/static/html/" />
	<mvc:resources mapping="/js/**" location="/static/js/" />
	<mvc:resources mapping="/css/**" location="/static/css/" />
	<mvc:resources mapping="/image/**" location="/static/image/" />
	<mvc:resources mapping="/assets/**" location="/static/assets/" />
	
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean"></bean>
		
	<!-- 启用shrio授权注解拦截方式 -->
    <aop:config proxy-target-class="true"></aop:config>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
	
    <!-- 配置springMVC处理上传文件的信息  现在和ueditor冲突了，只能注释掉-->
    <!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="10485760000"/>
        <property name="maxInMemorySize" value="40960"/>
    </bean> -->



</beans>
